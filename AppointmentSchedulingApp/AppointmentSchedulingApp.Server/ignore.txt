#include<bits/stdc++.h>
#define el cout<<"\n"
#define f0(i,n) for(int i=0;i<n;++i)
#define f1(i,n) for(int i=1;i<=n;++i)
#define maxn 1024
using namespace std;
int t;
vector <pair<int, int>> adj[maxn];
void solve()
{
    int n, m;
    cin >> n >> m;
    vector <int> dp(1 << n, 1e9);
    string smask; cin >> smask;
    int s = bitset <10>(smask).to_ulong();
    dp[s] = 0;
    vector <int> symp(m), side(m), d(m);
    f0 (i, m) {
        cin >> d[i];
        string s; cin >> s;
        symp[i] = bitset <10> (s).to_ulong();
        cin >> s;
        side[i] = bitset <10> (s).to_ulong();
    }
    f0 (mask, 1 << n) adj[mask].clear();
    for (int mask = 0; mask < 1 << n; mask++) {
        f0 (i, m)
        {
            int nxt = mask & (~symp[i]) | side[i];
            adj[mask].push_back({nxt, d[i]});
        }
    }
    #define pii pair<int,int>
    priority_queue <pii, vector<pii>, greater<pii>> q;
    q.push({0, s});
    while (q.size()) {
        auto [du, u] = q.top();
        q.pop();
        if (du != dp[u]) continue;
        for (auto [v, w] : adj[u]) {
            if (dp[u] + w < dp[v]) {
                dp[v] = dp[u] + w;
                q.push({dp[v], v});
            }
        }
    }
    if (dp[0] != 1e9) cout << dp[0];
    else cout << -1;
    el;
}
main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> t;
    while (t--) {
        solve();
    }
}
